#!/usr/bin/env bash
#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Add default JVM options here. You may also use JAVA_OPTS and GRADLE_OPTS.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=$(basename "$0")

# Use the maximum available, or pass GORILLA_MAX_MEM to use a specific amount.
if [ -z "$JAVA_HOME" ] ; then
  if [ -x /usr/libexec/java_home ] ; then
    JAVA_HOME=$(/usr/libexec/java_home)
  fi
fi
if [ -z "$JAVA_HOME" ] ; then
  JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
fi

if [ -z "$JAVA_HOME" ] ; then
  echo "Error: JAVA_HOME is not set and no Java found in PATH."
  exit 1
fi

# OS specific support (must be 'true' or 'false').
cygwin=false
darwin=false
case "`uname`" in
  CYGWIN*)
    cygwin=true
    ;;
  Darwin*)
    darwin=true
    ;;
esac

# For Cygwin, ensure paths are in UNIX format before anything else.
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# Determine the Java command to run.
if [ -n "$JAVA_HOME" ] ; then
  if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
    # IBM's JDK on AIX uses "$JAVA_HOME/jre/sh/java" as the actual executable.
    JAVA_CMD="$JAVA_HOME/jre/sh/java"
  else
    JAVA_CMD="$JAVA_HOME/bin/java"
  fi
else
  JAVA_CMD="java"
fi

# Determine the script directory.
SCRIPT_DIR=$(dirname "$0")

# Add default JVM options here. You may also use JAVA_OPTS and GRADLE_OPTS.
DEFAULT_JVM_OPTS=""

# Determine the path to the Gradle wrapper JAR.
GRADLE_WRAPPER_JAR="$SCRIPT_DIR/gradle/wrapper/gradle-wrapper.jar"

# Check if the wrapper JAR exists.
if [ ! -f "$GRADLE_WRAPPER_JAR" ]; then
    echo "Error: Gradle wrapper JAR not found at $GRADLE_WRAPPER_JAR"
    echo "Please run 'gradle wrapper' to generate it, or ensure it's in the correct location."
    exit 1
fi

# Execute the Gradle wrapper.
exec "$JAVA_CMD" $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS -classpath "$GRADLE_WRAPPER_JAR" org.gradle.wrapper.GradleWrapperMain "$@"
